// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelAndAccommodationBookingPlatform.Domain;

#nullable disable

namespace TravelAndAccommodationBookingPlatform.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"), 1L, 1);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PostOffice")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            CityId = 1,
                            Location = "City1",
                            Name = "Hotel1 in City1",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 2,
                            CityId = 1,
                            Location = "City1",
                            Name = "Hotel2 in City1",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 3,
                            CityId = 1,
                            Location = "City1",
                            Name = "Hotel3 in City1",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 4,
                            CityId = 2,
                            Location = "City2",
                            Name = "Hotel1 in City2",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 5,
                            CityId = 2,
                            Location = "City2",
                            Name = "Hotel2 in City2",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 6,
                            CityId = 2,
                            Location = "City2",
                            Name = "Hotel3 in City2",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 7,
                            CityId = 3,
                            Location = "City3",
                            Name = "Hotel1 in City3",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 8,
                            CityId = 3,
                            Location = "City3",
                            Name = "Hotel2 in City3",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 9,
                            CityId = 3,
                            Location = "City3",
                            Name = "Hotel3 in City3",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 10,
                            CityId = 4,
                            Location = "City4",
                            Name = "Hotel1 in City4",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 11,
                            CityId = 4,
                            Location = "City4",
                            Name = "Hotel2 in City4",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 12,
                            CityId = 4,
                            Location = "City4",
                            Name = "Hotel3 in City4",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 13,
                            CityId = 5,
                            Location = "City5",
                            Name = "Hotel1 in City5",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 14,
                            CityId = 5,
                            Location = "City5",
                            Name = "Hotel2 in City5",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 15,
                            CityId = 5,
                            Location = "City5",
                            Name = "Hotel3 in City5",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 16,
                            CityId = 6,
                            Location = "City6",
                            Name = "Hotel1 in City6",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 17,
                            CityId = 6,
                            Location = "City6",
                            Name = "Hotel2 in City6",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 18,
                            CityId = 6,
                            Location = "City6",
                            Name = "Hotel3 in City6",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 19,
                            CityId = 7,
                            Location = "City7",
                            Name = "Hotel1 in City7",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 20,
                            CityId = 7,
                            Location = "City7",
                            Name = "Hotel2 in City7",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 21,
                            CityId = 7,
                            Location = "City7",
                            Name = "Hotel3 in City7",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 22,
                            CityId = 8,
                            Location = "City8",
                            Name = "Hotel1 in City8",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 23,
                            CityId = 8,
                            Location = "City8",
                            Name = "Hotel2 in City8",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 24,
                            CityId = 8,
                            Location = "City8",
                            Name = "Hotel3 in City8",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 25,
                            CityId = 9,
                            Location = "City9",
                            Name = "Hotel1 in City9",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 26,
                            CityId = 9,
                            Location = "City9",
                            Name = "Hotel2 in City9",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 27,
                            CityId = 9,
                            Location = "City9",
                            Name = "Hotel3 in City9",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 28,
                            CityId = 10,
                            Location = "City10",
                            Name = "Hotel1 in City10",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 29,
                            CityId = 10,
                            Location = "City10",
                            Name = "Hotel2 in City10",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        },
                        new
                        {
                            HotelId = 30,
                            CityId = 10,
                            Location = "City10",
                            Name = "Hotel3 in City10",
                            Owner = "Hotel Owner",
                            StarRating = 4
                        });
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.HotelAmenity", b =>
                {
                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.HasKey("HotelId", "AmenityId");

                    b.HasIndex("AmenityId");

                    b.ToTable("HotelAmenities");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.HotelImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"), 1L, 1);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ImageId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImages");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<int>("AdultCapacity")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenCapacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.RoomImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Booking", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.City", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.HotelAmenity", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Amenity", "Amenity")
                        .WithMany("HotelAmenities")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", "Hotel")
                        .WithMany("HotelAmenities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.HotelImage", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", "Hotel")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Room", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.RoomImage", b =>
                {
                    b.HasOne("TravelAndAccommodationBookingPlatform.Domain.Entities.Room", "Room")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Amenity", b =>
                {
                    b.Navigation("HotelAmenities");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.City", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("HotelAmenities");

                    b.Navigation("HotelImages");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("RoomImages");
                });

            modelBuilder.Entity("TravelAndAccommodationBookingPlatform.Domain.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
